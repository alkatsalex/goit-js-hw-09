{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAO,CACTC,KAAMC,SAASC,cAAc,SAC7BC,SAAUF,SAASC,cAAc,kBACjCE,QAASH,SAASC,cAAc,iBAChCG,UAAWJ,SAASC,cAAc,oBA2BtC,SAASI,EAAcC,EAAUC,GAE7B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAElCJ,EAAQ,CAACH,WAAUC,UAErBG,EAAO,CAACJ,WAAUC,S,GAEjBA,E,IAjCTT,EAAKC,KAAKe,iBAAiB,UAG3B,SAAkBC,GAChBA,EAAEC,iBAKF,IAJA,IAAMC,EAASC,SAASpB,EAAKM,UAAUe,OACjCC,EAAaF,SAASpB,EAAKI,SAASiB,OACpCE,EAAOH,SAASpB,EAAKK,QAAQgB,OAC/BG,EAAQF,EACHG,EAAW,EAAGA,GAAYN,EAAQM,GAAY,EAEnDlB,EAAckB,EAAUD,GACvBE,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACXmB,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAEvEuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAA9B,GAAS+B,OAAOI,QAAQ,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAGrEe,GAAOD,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nconst refs = {\n    form: document.querySelector('.form'),\n    delayInp: document.querySelector('[name=\"delay\"]'),\n    stepInp: document.querySelector('[name=\"step\"]'),\n    amountInp: document.querySelector('[name=\"amount\"]'),\n\n  }\n\n  refs.form.addEventListener('submit', onSubmit)\n\n\n  function onSubmit(e) {\n    e.preventDefault();\n    const amount = parseInt(refs.amountInp.value)\n    const firstDelay = parseInt(refs.delayInp.value)\n    const step = parseInt(refs.stepInp.value)\n    let delay = firstDelay\n    for (let position = 1; position <= amount; position += 1) {\n\n        createPromise(position, delay)\n        .then(({ position, delay }) => {\n                Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n              })\n              .catch(({ position, delay }) => {\n                Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n              })\n\n              delay+=step\n    }\n  }\n\nfunction createPromise(position, delay) {\n  \n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n            resolve({position, delay})\n        } else {\n          reject({position, delay})\n        }\n        }, delay)\n      })\n   \n \n  }\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delayInp","stepInp","amountInp","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","amount","parseInt","value","firstDelay","step","delay1","position1","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.a4b62f0f.js.map"}